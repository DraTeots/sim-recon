import sbms
Import('*')

subdirs = [
'occupancy_online',
'BCAL_online',
'BCAL_LEDonline',
'CDC_online',
'DAQ_online',
'FCAL_online',
'FCAL_invmass',
'FDC_online',
'FDC_Efficiency',
'PSC_online',
'RF_online',
'pedestal_online',
'PS_online',
'PSPair_online',
'ST_online_lowlevel',
'ST_online_tracking',
'ST_online_Tresolution',
'ST_online_efficiency',
'ST_online_multi',
'TAGGER_online',
'TAGH_online',
'TAGM_online',
'TAGM_clusters',
'TOF_online',
'TRIG_online',
'TPOL_online',
'CDC_expert',
'CDC_expert_2',
'TOF_TDC_shift',
'BCAL_Eff',
'BCAL_inv_mass',
'CDC_drift',
'CDC_Cosmics',
'EPICS_dump',
'CDC_Efficiency',
'L1_online',
'highlevel_online'
]

#'L3_online',
#'CODA_online',
#'EVNT_online',

# Apple LLVM/Clang does not support thread_local at this time
# Skip plugins that require thread_local if Apple LLVM is detected
require_thread_local = ['BCAL_Hadronic_Eff','FCAL_Hadronic_Eff','SC_Eff','TOF_Eff','TS_scaler']
if "llvm" not in env["OSNAME"]:
	for directory in require_thread_local:
		subdirs.append(directory)
else: print "Apple Clang does not support thread_local at this time. Skipping\n", require_thread_local

sbms.OptionallyBuild(env, ['TAGH_doubles'])
SConscript(dirs=subdirs, exports='env osname', duplicate=0)
